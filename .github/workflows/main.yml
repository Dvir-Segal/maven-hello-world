name: Build and Package

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Increase Patch Version
      run: |
        cd myapp
        git pull
        # Get current version
        current_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "Current version: $current_version"
        # Increment the patch version
        new_version=$(echo $current_version | awk -F. -v OFS=. '{$NF++;print}')
        echo "New version: $new_version"
        # Update the pom.xml with the new version
        mvn versions:set -DnewVersion=${new_version}-SNAPSHOT -DgenerateBackupPoms=false
        mvn versions:commit
        # Verify the version change
        updated_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "Updated version in pom.xml: $updated_version"
        echo "new_version=${new_version}" >> $GITHUB_ENV

    - name: Commit and Push Version Change
      run: |
        cd myapp
        git config user.name "Dvir-Segal"
        git config user.email "dvirsegal96@gmail.com"
        git add pom.xml
        git commit -m "Bump version to ${{ env.new_version }}-SNAPSHOT"
        git push


    - name: Compile with Maven
      run: cd myapp && mvn compile

    - name: Package with Maven
      run: cd myapp && mvn package

    # - name: Print Hello
    #   run: cd myapp/target && java -cp myapp-${{ env.new_version }}-SNAPSHOT.jar com.myapp.App

    - name: Upload JAR Artifact
      uses: actions/upload-artifact@v3
      with:
        name: myapp
        path: myapp/target/*.jar


    - name: Create Dockerfile
      id: create_dockerfile
      run: |
        echo "FROM openjdk:11-jre-slim" > Dockerfile
        echo "WORKDIR /app" >> Dockerfile
        echo "COPY myapp/target/myapp-${{ env.new_version }}-SNAPSHOT.jar /app/" >> Dockerfile
        echo "USER 1000:1000" >> Dockerfile
        echo "ENTRYPOINT [\"java\", \"-jar\", \"myapp-${{ env.new_version }}-SNAPSHOT.jar\"]" >> Dockerfile

    - name: Build Docker Image
      id: build_docker_image
      run: |
        docker build -t myapp:${{ env.new_version }} .

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: dvirdock
        password: Centos925

    - name: Push Docker Image
      run: |
        docker tag myapp:${{ env.new_version }} dvirdock/myapp:${{ env.new_version }}
        docker push dvirdock/myapp:${{ env.new_version }}

    - name: Run Docker Image
      id: run_docker
      run: |
        docker run --name myapp-container-${{ env.new_version }} -d dvirdock/myapp:${{ env.new_version }}
        # Wait for the container to start
        sleep 5
        # Fetch logs to check if the application is running correctly
        docker logs myapp-container-${{ env.new_version }}

    - name: Clean Up Docker Containers
      run: |
        # Stop and remove all containers with the prefix "myapp-container"
        docker ps -a --filter "name=myapp-container" -q | xargs -r docker stop
        docker ps -a --filter "name=myapp-container" -q | xargs -r docker rm
